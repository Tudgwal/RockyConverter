name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  create-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create_tag.outputs.tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: get latest tag with format v0.0.0
      id: get_tag
      run: echo ::set-output name=tag::$(git describe --tags --abbrev=0)

    - name: create new tag with format v0.0.0 and add +1 to the 3rd number
      id: create_tag
      run: echo ::set-output name=tag::$(echo ${{ steps.get_tag.outputs.tag }} | awk -F. -v OFS=. '{$3++; print}')

    - name: push new tag
      run: git tag ${{ steps.create_tag.outputs.tag }} && git push origin ${{ steps.create_tag.outputs.tag }}
      

  build:
    needs: create-tag
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build executable
      run: pyinstaller --onefile --icon=assets/logo.ico --name=RockyConverter windows/RockyConverter.py

    - name: Copy in dist all necessary files
      run: |
        cp windows/installer.bat dist/
        cp linux/RockyConverter.sh dist/

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: executable
        path: dist/

  release:
    needs: [build, create-tag]
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: executable
        path: dist

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.create-tag.outputs.tag }}
        release_name: Release ${{ needs.create-tag.outputs.tag }}s
        draft: false
        prerelease: false

    - name: Upload Executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/RockyConverter.exe
        asset_name: RockyConverter.exe
        asset_content_type: application/vnd.microsoft.portable-executable

    - name: Upload Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/installer.bat
        asset_name: installer.bat
        asset_content_type: text/x-batch

    - name: Upload Linux Script
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/RockyConverter.sh
        asset_name: RockyConverter.sh
        asset_content_type: text/x-shellscript